parameters:
- name: environments
  type: object
  default: ['d']

trigger: 
  branches:
    include:
      - develop
      - feature/api-initial
pr: none

pool:
  vmImage: "ubuntu-latest"

stages:
- stage: Build
  displayName: Build stage
  variables: 
    - template: ../variables/vars.yml
  jobs:
  - job: Build
    displayName: Build job
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '${{ variables.dotnetSdkVersion }}'

    - script: |
        dotnet restore
        dotnet build $(Build.SourcesDirectory)/${{ variables.portalApiSolution }}/denicestbankportal.sln --configuration Release
        dotnet publish $(Build.SourcesDirectory)/${{ variables.portalApiSolution }}/denicestbankportal.sln --configuration Release --output $(Build.ArtifactStagingDirectory)/publish
      displayName: 'Build and Publish'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/publish'
        artifact: 'publish'
        publishLocation: 'pipeline'

- ${{ each env in parameters.environments }}:
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    variables:
      - template: ../variables/vars.yml
      - template: ../variables/vars-${{ env }}.yml

    jobs:
    - deployment: Deploy
      displayName: Deploy job
      environment: env_${{ env }}
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: ${{ variables.envDevOpsServiceConnection }}
                  appType: 'webApp'
                  appName: ${{ variables.appName }}
                  package: $(Pipeline.Workspace)/publish
                  deploymentMethod: 'auto'
                  enableCustomDeployment: true
                  # Set the environment name as an app setting
                  appSettings: '-ENVIRONMENT_NAME ${{ env }}'
