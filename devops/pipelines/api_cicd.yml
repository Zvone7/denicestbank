parameters:
- name: environments
  type: object
  default: ['d']
- name: should_dependency_check
  type: boolean
  default: false

trigger: 
  branches:
    include:
      - develop
      - feature/api-initial
pr: none

pool:
  vmImage: "ubuntu-latest"

stages:
- stage: Build
  displayName: Build stage
  variables: 
    - template: ../variables/vars.yml
  jobs:
  - job: Build
    displayName: Build job
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '${{ variables.dotnetSdkVersion }}'
    
    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '${{ variables.portalApiSolution }}/${{ variables.portalApiSolution }}/${{ variables.portalApiSolution }}.csproj'
        arguments: "--configuration Release"

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        projects: '**/*.csproj'
        arguments: '--configuration Release --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'

    # Zips and publish the build artifact to the artifact staging directory
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration Release --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'publish'
        publishLocation: 'pipeline'

    - task: dependency-check-build-task@6
      displayName: Execute Owasp Scan
      condition: ${{parameters.should_dependency_check}}
      inputs:
        projectName: 'resource/webapp/MetadataStore.API'
        scanPath: '$(Build.SourcesDirectory)/**/bin/Release/net*/*.dll'
        suppressionPath: '$(Build.SourcesDirectory)/owasp-dependency-suppression-file.xml'
        failOnCVSS: 8 # Fail the build if vulnerabilities with CVSS score higher than 8 are discovered
        format: 'HTML, JSON, JUNIT'
        enableExperimental: true
        
    - task: PublishTestResults@2
      displayName: Publish Owasp Dependency Check Test Results
      condition: ${{parameters.should_dependency_check}}
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/*-junit.xml'
        searchFolder: '$(Common.TestResultsDirectory)'
        testRunTitle: 'Dependency Check'
        buildConfiguration: 'Release'

- ${{ each env in parameters.environments }}:
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    variables:
      - template: ../variables/vars.yml
      - template: ../variables/vars-${{ env }}.yml

    jobs:
    - deployment: Deploy
      displayName: Deploy job
      environment: env_${{ env }}
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: ${{ variables.envDevOpsServiceConnection }}
                  appType: 'webApp'
                  appName: ${{ variables.portalAppName }}
                  package: $(Pipeline.Workspace)/publish
                  deploymentMethod: 'auto'
                  enableCustomDeployment: true
                  # Set the environment name as an app setting
                  appSettings: '-ENVIRONMENT_NAME ${{ env }}'
